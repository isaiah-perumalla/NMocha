//-----------------------------------------------------------------------
// <copyright file="StubAcceptanceTest.cs" company="NMock2">
//
//   http://www.sourceforge.net/projects/NMock2
//
//   Licensed under the Apache License, Version 2.0 (the "License");
//   you may not use this file except in compliance with the License.
//   You may obtain a copy of the License at
//
//       http://www.apache.org/licenses/LICENSE-2.0
//
//   Unless required by applicable law or agreed to in writing, software
//   distributed under the License is distributed on an "AS IS" BASIS,
//   WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
//   See the License for the specific language governing permissions and
//   limitations under the License.
// </copyright>
// This is the easiest way to ignore StyleCop rules on this file, even if we shouldn't use this tag:
// <auto-generated />
//-----------------------------------------------------------------------
using NUnit.Framework;

namespace NMock2.AcceptanceTests {
    [TestFixture]
    public class StubAcceptanceTest : AcceptanceTestBase {
        private const int ANY_NUMBER = 10;

        [Test]
        public void StubsCanBeCalledAnyNumberOfTimes() {
            var speaker = (ISpeaker) Mocks.NewInstanceOfRole(typeof (ISpeaker));

            Stub.On(speaker).Message("Hello").WithAnyArguments();

            for (int i = 0; i < ANY_NUMBER; i++) speaker.Hello();
        }

        [Test]
        public void StubsDoNotHaveToBeCalled() {
            var speaker = (ISpeaker) Mocks.NewInstanceOfRole(typeof (ISpeaker));

            Stub.On(speaker).Message("Hello").WithAnyArguments();
        }

        [Test]
        public void StubsMatchArgumentsAndPerformActionsJustLikeAnExpectation() {
            var speaker = (ISpeaker) Mocks.NewInstanceOfRole(typeof (ISpeaker));

            Stub.On(speaker).Message("Ask").With("Name").Will(Return.Value("Bob"));
            Stub.On(speaker).Message("Ask").With("Age").Will(Return.Value("30"));

            for (int i = 0; i < ANY_NUMBER; i++)
            {
                Verify.That(speaker.Ask("Name"), Is.EqualTo("Bob"), "Name");
                Verify.That(speaker.Ask("Age"), Is.EqualTo("30"), "Age");
            }
        }
    }
}