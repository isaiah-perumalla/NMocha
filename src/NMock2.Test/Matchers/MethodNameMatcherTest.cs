//-----------------------------------------------------------------------
// <copyright file="MethodNameMatcherTest.cs" company="NMock2">
//
//   http://www.sourceforge.net/projects/NMock2
//
//   Licensed under the Apache License, Version 2.0 (the "License");
//   you may not use this file except in compliance with the License.
//   You may obtain a copy of the License at
//
//       http://www.apache.org/licenses/LICENSE-2.0
//
//   Unless required by applicable law or agreed to in writing, software
//   distributed under the License is distributed on an "AS IS" BASIS,
//   WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
//   See the License for the specific language governing permissions and
//   limitations under the License.
// </copyright>
// This is the easiest way to ignore StyleCop rules on this file, even if we shouldn't use this tag:
// <auto-generated />
//-----------------------------------------------------------------------
namespace NMock2.Test.Matchers
{
    using System;
    using NUnit.Framework;
    using NMock2.Matchers;

    [TestFixture]
    public class MethodNameMatcherTest
    {
        public interface I
        {
            void m();
            int m(int i);
            bool m(string s, string t);
            void n();
        }

        [Test]
        public void MatchesMethodsWithAGivenName()
        {
            Matcher matcher = new MethodNameMatcher("m");

            Assert.IsTrue(matcher.Matches(typeof(I).GetMethod("m", new Type[0])),
                          "m()");
            Assert.IsTrue(matcher.Matches(typeof(I).GetMethod("m", new Type[] {typeof(int)})),
                          "m(int)");
            Assert.IsTrue(matcher.Matches(typeof(I).GetMethod("m", new Type[] {typeof(string), typeof(string)})),
                          "m(string,string)");
            Assert.IsFalse(matcher.Matches(typeof(I).GetMethod("n", new Type[0])),
                           "n()");
        }

        [Test]
        public void DoesNotMatchObjectsThatAreNotMethodInfo()
        {
            Matcher matcher = new MethodNameMatcher("m");
            Assert.IsFalse(matcher.Matches("m"));
        }

        [Test]
        public void UsesMethodNameAsDescription()
        {
            AssertDescription.IsEqual(new MethodNameMatcher("m"), "m");
        }
    }
}
